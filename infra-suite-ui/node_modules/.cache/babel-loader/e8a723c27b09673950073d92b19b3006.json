{"ast":null,"code":"var _jsxFileName = \"/Users/junaidjaved/Documents/Southwest/CHIP Work/infra-suite/infra-suite-ui/src/layouts/Device Monitoring/Drop Down Select.js\";\nimport React, { useState } from 'react';\nimport styled from '@emotion/styled';\nimport { keyframes, css } from '@emotion/core';\nimport { Heading } from './components/Heading';\nimport Select from '../../../src';\n\nconst WithAnimation = ({\n  options,\n  title\n}) => {\n  const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n  const [open, setOpen] = useState(null);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    title: title,\n    source: \"https://github.com/sanusart/react-dropdown-select/tree/master/docs/src/examples/WithAnimation.js\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(StyledSelect, {\n    multi: true,\n    options: options,\n    values: [],\n    isOpen: open,\n    onDropdownCloseRequest: ({\n      close\n    }) => {\n      setOpen(true);\n      sleep(300).then(() => {\n        close();\n        setOpen(false);\n      });\n    },\n    onChange: value => console.log(`%c > onChange ${title} `, 'background: #555; color: tomato', value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst hide = keyframes`\n  from {\n    transition: height 310ms ease;\n  }\n  to {\n    transition: height 310ms ease;\n    height: 0;\n    opacity: 0;\n  }\n`;\nconst show = keyframes`\n  from {\n    transition: height 310ms ease;\n    height: 0;\n    opacity: 0;\n  }\n  to {\n    transition: height 310ms ease;\n  }\n`;\nconst StyledSelect = styled(Select)`\n  transition: all 0.3s ease-out;\n  .react-dropdown-select-dropdown {\n    height: 310px;\n    ${({\n  isOpen\n}) => isOpen ? css`\n            animation: ${hide} 310ms ease-in-out;\n          ` : css`\n            animation: ${show} 310ms ease-in-out;\n          `};\n  }\n  .react-dropdown-select-option {\n    transition: all 0.3s ease-out;\n  }\n`;\nWithAnimation.propTypes = {};\nexport default WithAnimation;","map":{"version":3,"sources":["/Users/junaidjaved/Documents/Southwest/CHIP Work/infra-suite/infra-suite-ui/src/layouts/Device Monitoring/Drop Down Select.js"],"names":["React","useState","styled","keyframes","css","Heading","Select","WithAnimation","options","title","sleep","ms","Promise","resolve","setTimeout","open","setOpen","close","then","value","console","log","hide","show","StyledSelect","isOpen","propTypes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,SAAT,EAAoBC,GAApB,QAA+B,eAA/B;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAwB;AAC5C,QAAMC,KAAK,GAAIC,EAAD,IAAQ,IAAIC,OAAJ,CAAaC,OAAD,IAAaC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAnC,CAAtB;;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,IAAD,CAAhC;AAEA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AACE,IAAA,KAAK,EAAEQ,KADT;AAEE,IAAA,MAAM,EAAC,kGAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME,oBAAC,YAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,OAAO,EAAED,OAFX;AAGE,IAAA,MAAM,EAAE,EAHV;AAIE,IAAA,MAAM,EAAEO,IAJV;AAKE,IAAA,sBAAsB,EAAE,CAAC;AAAEE,MAAAA;AAAF,KAAD,KAAe;AACrCD,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAN,MAAAA,KAAK,CAAC,GAAD,CAAL,CAAWQ,IAAX,CAAgB,MAAM;AACpBD,QAAAA,KAAK;AACLD,QAAAA,OAAO,CAAC,KAAD,CAAP;AACD,OAHD;AAID,KAXH;AAYE,IAAA,QAAQ,EAAGG,KAAD,IACRC,OAAO,CAACC,GAAR,CAAa,iBAAgBZ,KAAM,GAAnC,EAAuC,iCAAvC,EAA0EU,KAA1E,CAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAyBD,CA7BD;;AA+BA,MAAMG,IAAI,GAAGnB,SAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;AAWA,MAAMoB,IAAI,GAAGpB,SAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;AAWA,MAAMqB,YAAY,GAAGtB,MAAM,CAACI,MAAD,CAAS;AACpC;AACA;AACA;AACA,MAAM,CAAC;AAAEmB,EAAAA;AAAF,CAAD,KACAA,MAAM,GACFrB,GAAI;AACd,yBAAyBkB,IAAK;AAC9B,WAHY,GAIFlB,GAAI;AACd,yBAAyBmB,IAAK;AAC9B,WAAY;AACZ;AACA;AACA;AACA;AACA,CAhBA;AAkBAhB,aAAa,CAACmB,SAAd,GAA0B,EAA1B;AAEA,eAAenB,aAAf","sourcesContent":["import React, { useState } from 'react';\nimport styled from '@emotion/styled';\nimport { keyframes, css } from '@emotion/core';\nimport { Heading } from './components/Heading';\nimport Select from '../../../src';\n\nconst WithAnimation = ({ options, title }) => {\n  const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n  const [open, setOpen] = useState(null);\n\n  return (\n    <React.Fragment>\n      <Heading\n        title={title}\n        source=\"https://github.com/sanusart/react-dropdown-select/tree/master/docs/src/examples/WithAnimation.js\"\n      />\n\n      <StyledSelect\n        multi\n        options={options}\n        values={[]}\n        isOpen={open}\n        onDropdownCloseRequest={({ close }) => {\n          setOpen(true);\n          sleep(300).then(() => {\n            close();\n            setOpen(false);\n          });\n        }}\n        onChange={(value) =>\n          console.log(`%c > onChange ${title} `, 'background: #555; color: tomato', value)\n        }\n      />\n    </React.Fragment>\n  );\n};\n\nconst hide = keyframes`\n  from {\n    transition: height 310ms ease;\n  }\n  to {\n    transition: height 310ms ease;\n    height: 0;\n    opacity: 0;\n  }\n`;\n\nconst show = keyframes`\n  from {\n    transition: height 310ms ease;\n    height: 0;\n    opacity: 0;\n  }\n  to {\n    transition: height 310ms ease;\n  }\n`;\n\nconst StyledSelect = styled(Select)`\n  transition: all 0.3s ease-out;\n  .react-dropdown-select-dropdown {\n    height: 310px;\n    ${({ isOpen }) =>\n      isOpen\n        ? css`\n            animation: ${hide} 310ms ease-in-out;\n          `\n        : css`\n            animation: ${show} 310ms ease-in-out;\n          `};\n  }\n  .react-dropdown-select-option {\n    transition: all 0.3s ease-out;\n  }\n`;\n\nWithAnimation.propTypes = {};\n\nexport default WithAnimation;"]},"metadata":{},"sourceType":"module"}