{"ast":null,"code":"var _jsxFileName = \"/Users/junaidjaved/Documents/Southwest/CHIP Work/infra-suite/infra-suite-ui/src/layouts/Device Monitoring/Pie Chart.js\";\nimport React, { Component } from 'react'; //import \"~react-vis/dist/style\";\n\nimport { XYPlot, XAxis, YAxis, HorizontalGridLines, LineSeries } from 'react-vis';\n\nclass PieChart extends Component {\n  render() {\n    const {\n      HorizontalGridLines,\n      VerticalGridLines,\n      XAxis,\n      XYPlot,\n      YAxis,\n      MarkSeries\n    } = reactVis;\n    const data = new Array(200).fill(0).reduce((prev, curr) => [...prev, {\n      x: Math.random() * 20,\n      y: Math.random() * 20\n    }], []);\n    return /*#__PURE__*/React.createElement(XYPlot, {\n      width: 400,\n      height: 400,\n      xDomain: [0, 20],\n      yDomain: [0, 20],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(XAxis, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 39\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 48\n      }\n    }), /*#__PURE__*/React.createElement(HorizontalGridLines, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(VerticalGridLines, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(MarkSeries, {\n      data: data,\n      stroke: \"white\",\n      opacityType: \"category\",\n      opacity: \"0.2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nexport default PieChart;","map":{"version":3,"sources":["/Users/junaidjaved/Documents/Southwest/CHIP Work/infra-suite/infra-suite-ui/src/layouts/Device Monitoring/Pie Chart.js"],"names":["React","Component","XYPlot","XAxis","YAxis","HorizontalGridLines","LineSeries","PieChart","render","VerticalGridLines","MarkSeries","reactVis","data","Array","fill","reduce","prev","curr","x","Math","random","y"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,KAAvB,EAA8BC,mBAA9B,EAAmDC,UAAnD,QAAoE,WAApE;;AAEA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAChCO,EAAAA,MAAM,GAAG;AACR,UAAM;AACLH,MAAAA,mBADK;AAELI,MAAAA,iBAFK;AAGLN,MAAAA,KAHK;AAILD,MAAAA,MAJK;AAKLE,MAAAA,KALK;AAMLM,MAAAA;AANK,QAOAC,QAPN;AASE,UAAMC,IAAI,GAAG,IAAIC,KAAJ,CAAU,GAAV,EAAeC,IAAf,CAAoB,CAApB,EAAuBC,MAAvB,CAA8B,CAACC,IAAD,EAAOC,IAAP,KAAgB,CAAC,GAAGD,IAAJ,EAAU;AACtEE,MAAAA,CAAC,EAAEC,IAAI,CAACC,MAAL,KAAgB,EADmD;AAEtEC,MAAAA,CAAC,EAAEF,IAAI,CAACC,MAAL,KAAgB;AAFmD,KAAV,CAA9C,EAGT,EAHS,CAAb;AAKF,wBACC,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,GAAf;AAAoB,MAAA,MAAM,EAAE,GAA5B;AACC,MAAA,OAAO,EAAE,CAAC,CAAD,EAAG,EAAH,CADV;AACkB,MAAA,OAAO,EAAE,CAAC,CAAD,EAAG,EAAH,CAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACmC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADnC,eAC4C,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD5C,eAEC,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,eAGC,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,eAIC,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAER,IAAlB;AAAwB,MAAA,MAAM,EAAC,OAA/B;AACA,MAAA,WAAW,EAAC,UADZ;AAEA,MAAA,OAAO,EAAC,KAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJD,CADD;AAUA;;AA1B+B;;AA6BjC,eAAeL,QAAf","sourcesContent":["import React, { Component } from 'react';\r\n//import \"~react-vis/dist/style\";\r\nimport {XYPlot, XAxis, YAxis, HorizontalGridLines, LineSeries} from 'react-vis';\r\n \r\nclass PieChart extends Component {\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tHorizontalGridLines,\r\n\t\t\tVerticalGridLines,\r\n\t\t\tXAxis,\r\n\t\t\tXYPlot,\r\n\t\t\tYAxis,\r\n\t\t\tMarkSeries\r\n\t\t  } = reactVis;\r\n\r\n\t\t  const data = new Array(200).fill(0).reduce((prev, curr) => [...prev, {\r\n\t\t\tx: Math.random() * 20,\r\n\t\t\ty: Math.random() * 20\r\n\t\t  }], []);\r\n\t\t  \r\n\t\treturn (\r\n\t\t\t<XYPlot width={400} height={400}\r\n\t\t\t\txDomain={[0,20]} yDomain={[0,20]}><XAxis /><YAxis />\r\n\t\t\t\t<HorizontalGridLines />\r\n\t\t\t\t<VerticalGridLines />\r\n\t\t\t\t<MarkSeries data={data} stroke=\"white\"\r\n\t\t\t\topacityType=\"category\"\r\n\t\t\t\topacity=\"0.2\"/>\r\n\t\t\t</XYPlot>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default PieChart;"]},"metadata":{},"sourceType":"module"}